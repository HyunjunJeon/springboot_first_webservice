language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

before_deploy: #프로젝트 폴더를 통째로 압축해서 AWS S3로 전달하도록
  - zip -r springboot-first-webservice * #모든 파일을 압축해서
  - mkdir -p deploy # 폴더를 만들어서
  - mv springboot-first-webservice.zip deploy/springboot-first-webservice.zip # 전달해라

deploy:
  - provider : s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: springboot-first-webservice-deploy
    region: ap-northeast-2
    skip_cleanup: true
    acl : public_read
    local_dir : deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      repo: HyunjunJeon/springboot_first_webservice
      branch: master

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot-first-webservice-deploy # S3 버킷
    key: springboot-first-webservice.zip # S3 버킷에 저장된 springboot-webservice.zip 파일을 EC2로 배포
    bundle_type: zip
    application: spboot-first-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: spboot-first-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: HyunjunJeon/springboot_first_webservice
      branch: master

# CI 실행 완료시 이메일로 알람 전송
notifications:
  email:
    recipients:
      - jeonhj920@gmail.com
